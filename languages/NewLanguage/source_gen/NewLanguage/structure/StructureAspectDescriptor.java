package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptElement = createDescriptorForElement();
  /*package*/ final ConceptDescriptor myConceptElementGroup = createDescriptorForElementGroup();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptElement, myConceptElementGroup);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Element:
        return myConceptElement;
      case LanguageConceptSwitch.ElementGroup:
        return myConceptElementGroup;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Element", 0x9c1938a5e93b418eL, 0x805cc5cc8d9baa75L, 0x308cbf48f10e4addL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5c967742-794e-4869-af14-932945b06c0b(NewLanguage.structure)/3498381330562829021");
    b.version(2);
    b.property("stringProperty", 0x352d58e11bc045caL).type(PrimitiveTypeId.STRING).origin("3831816581818631626").done();
    b.property("booleanProperty", 0x352d58e11bc045ccL).type(PrimitiveTypeId.BOOLEAN).origin("3831816581818631628").done();
    b.property("integerProperty", 0x352d58e11bc045cfL).type(PrimitiveTypeId.INTEGER).origin("3831816581818631631").done();
    b.associate("references", 0x308cbf48f12045e9L).target(0x9c1938a5e93b418eL, 0x805cc5cc8d9baa75L, 0x308cbf48f10e4addL).optional(true).origin("3498381330564007401").done();
    b.aggregate("elements", 0x308cbf48f10e687fL).target(0x9c1938a5e93b418eL, 0x805cc5cc8d9baa75L, 0x308cbf48f10e4addL).optional(true).ordered(true).multiple(true).origin("3498381330562836607").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElementGroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ElementGroup", 0x9c1938a5e93b418eL, 0x805cc5cc8d9baa75L, 0x68c3cf50b43e221dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5c967742-794e-4869-af14-932945b06c0b(NewLanguage.structure)/7549105345931387421");
    b.version(2);
    b.aggregate("elements", 0x308cbf48f10e4ae2L).target(0x9c1938a5e93b418eL, 0x805cc5cc8d9baa75L, 0x308cbf48f10e4addL).optional(true).ordered(true).multiple(true).origin("3498381330562829026").done();
    return b.create();
  }
}
